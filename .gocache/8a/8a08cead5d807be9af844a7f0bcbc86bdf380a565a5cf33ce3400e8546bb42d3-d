// Code generated by cmd/cgo; DO NOT EDIT.

//line /Users/jj/go/pkg/mod/fyne.io/systray@v1.11.0/systray_darwin.go:1:1
//go:build !ios

package systray

/*
#cgo darwin CFLAGS: -DDARWIN -x objective-c -fobjc-arc
#cgo darwin LDFLAGS: -framework Cocoa

#include <stdbool.h>
#include "systray.h"

void setInternalLoop(bool);
*/
import _ "unsafe"

import (
	"unsafe"
)

// SetTemplateIcon sets the systray icon as a template icon (on Mac), falling back
// to a regular icon on other platforms.
// templateIconBytes and regularIconBytes should be the content of .ico for windows and
// .ico/.jpg/.png for other platforms.
func SetTemplateIcon(templateIconBytes []byte, regularIconBytes []byte) {
	cstr := (* /*line :25:12*/_Ctype_char /*line :25:18*/)(unsafe.Pointer(&templateIconBytes[0]))
	( /*line :26:2*/_Cfunc_setIcon /*line :26:10*/)(cstr, ( /*line :26:19*/_Ctype_int /*line :26:24*/)(len(templateIconBytes)), true)
}

// SetIcon sets the icon of a menu item. Only works on macOS and Windows.
// iconBytes should be the content of .ico/.jpg/.png
func (item *MenuItem) SetIcon(iconBytes []byte) {
	cstr := (* /*line :32:12*/_Ctype_char /*line :32:18*/)(unsafe.Pointer(&iconBytes[0]))
	( /*line :33:2*/_Cfunc_setMenuItemIcon /*line :33:18*/)(cstr, ( /*line :33:27*/_Ctype_int /*line :33:32*/)(len(iconBytes)),  /*line :33:51*/_Ctype_int /*line :33:56*/(item.id), false)
}

// SetTemplateIcon sets the icon of a menu item as a template icon (on macOS). On Windows, it
// falls back to the regular icon bytes and on Linux it does nothing.
// templateIconBytes and regularIconBytes should be the content of .ico for windows and
// .ico/.jpg/.png for other platforms.
func (item *MenuItem) SetTemplateIcon(templateIconBytes []byte, regularIconBytes []byte) {
	cstr := (* /*line :41:12*/_Ctype_char /*line :41:18*/)(unsafe.Pointer(&templateIconBytes[0]))
	( /*line :42:2*/_Cfunc_setMenuItemIcon /*line :42:18*/)(cstr, ( /*line :42:27*/_Ctype_int /*line :42:32*/)(len(templateIconBytes)),  /*line :42:59*/_Ctype_int /*line :42:64*/(item.id), true)
}

func registerSystray() {
	( /*line :46:2*/_Cfunc_registerSystray /*line :46:18*/)()
}

func nativeLoop() {
	( /*line :50:2*/_Cfunc_nativeLoop /*line :50:13*/)()
}

func nativeEnd() {
	( /*line :54:2*/_Cfunc_nativeEnd /*line :54:12*/)()
}

func nativeStart() {
	( /*line :58:2*/_Cfunc_nativeStart /*line :58:14*/)()
}

func quit() {
	( /*line :62:2*/_Cfunc_quit /*line :62:7*/)()
}

func setInternalLoop(internal bool) {
	( /*line :66:2*/_Cfunc_setInternalLoop /*line :66:18*/)( /*line :66:20*/_Ctype_bool /*line :66:26*/(internal))
}

// SetIcon sets the systray icon.
// iconBytes should be the content of .ico for windows and .ico/.jpg/.png
// for other platforms.
func SetIcon(iconBytes []byte) {
	cstr := (* /*line :73:12*/_Ctype_char /*line :73:18*/)(unsafe.Pointer(&iconBytes[0]))
	( /*line :74:2*/_Cfunc_setIcon /*line :74:10*/)(cstr, ( /*line :74:19*/_Ctype_int /*line :74:24*/)(len(iconBytes)), false)
}

// SetTitle sets the systray title, only available on Mac and Linux.
func SetTitle(title string) {
	( /*line :79:2*/_Cfunc_setTitle /*line :79:11*/)(( /*line :79:13*/_Cfunc_CString /*line :79:21*/)(title))
}

// SetTooltip sets the systray tooltip to display on mouse hover of the tray icon,
// only available on Mac and Windows.
func SetTooltip(tooltip string) {
	( /*line :85:2*/_Cfunc_setTooltip /*line :85:13*/)(( /*line :85:15*/_Cfunc_CString /*line :85:23*/)(tooltip))
}

func addOrUpdateMenuItem(item *MenuItem) {
	var disabled  /*line :89:15*/_Ctype_short /*line :89:22*/
	if item.disabled {
		disabled = 1
	}
	var checked  /*line :93:14*/_Ctype_short /*line :93:21*/
	if item.checked {
		checked = 1
	}
	var isCheckable  /*line :97:18*/_Ctype_short /*line :97:25*/
	if item.isCheckable {
		isCheckable = 1
	}
	var parentID uint32 = 0
	if item.parent != nil {
		parentID = item.parent.id
	}
	( /*line :105:2*/_Cfunc_add_or_update_menu_item /*line :105:26*/)(
		 /*line :106:3*/_Ctype_int /*line :106:8*/(item.id),
		 /*line :107:3*/_Ctype_int /*line :107:8*/(parentID),
		( /*line :108:3*/_Cfunc_CString /*line :108:11*/)(item.title),
		( /*line :109:3*/_Cfunc_CString /*line :109:11*/)(item.tooltip),
		disabled,
		checked,
		isCheckable,
	)
}

func addSeparator(id uint32, parent uint32) {
	( /*line :117:2*/_Cfunc_add_separator /*line :117:16*/)( /*line :117:18*/_Ctype_int /*line :117:23*/(id),  /*line :117:29*/_Ctype_int /*line :117:34*/(parent))
}

func hideMenuItem(item *MenuItem) {
	( /*line :121:2*/_Cfunc_hide_menu_item /*line :121:17*/)(
		 /*line :122:3*/_Ctype_int /*line :122:8*/(item.id),
	)
}

func showMenuItem(item *MenuItem) {
	( /*line :127:2*/_Cfunc_show_menu_item /*line :127:17*/)(
		 /*line :128:3*/_Ctype_int /*line :128:8*/(item.id),
	)
}

func removeMenuItem(item *MenuItem) {
	( /*line :133:2*/_Cfunc_remove_menu_item /*line :133:19*/)(
		 /*line :134:3*/_Ctype_int /*line :134:8*/(item.id),
	)
}

func resetMenu() {
	( /*line :139:2*/_Cfunc_reset_menu /*line :139:13*/)()
}

//export systray_ready
func systray_ready() {
	systrayReady()
}

//export systray_on_exit
func systray_on_exit() {
	runSystrayExit()
}

//export systray_menu_item_selected
func systray_menu_item_selected(cID  /*line :153:37*/_Ctype_int /*line :153:42*/) {
	systrayMenuItemSelected(uint32(cID))
}
