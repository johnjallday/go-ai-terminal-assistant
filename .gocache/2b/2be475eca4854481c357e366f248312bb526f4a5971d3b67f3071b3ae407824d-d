// Code generated by cmd/cgo; DO NOT EDIT.

//line /Users/jj/go/pkg/mod/fyne.io/fyne/v2@v2.6.1/internal/driver/glfw/window_darwin.go:1:1
//go:build darwin

package glfw

/*
#cgo CFLAGS: -x objective-c
#cgo LDFLAGS: -framework Foundation -framework AppKit

#import <stdbool.h>

void setFullScreen(bool full, void *window);
*/
import _ "unsafe"
import (
	"runtime"

	"fyne.io/fyne/v2/driver"
)

// assert we are implementing driver.NativeWindow
var _ driver.NativeWindow = (*window)(nil)

func (w *window) RunNative(f func(any)) {
	context := driver.MacWindowContext{}
	if v := w.view(); v != nil {
		context.NSWindow = uintptr(v.GetCocoaWindow())
	}

	f(context)
}

func (w *window) doSetFullScreen(full bool) {
	if runtime.GOOS == "darwin" {
		win := w.view().GetCocoaWindow()
		func() { var _cgo0 _Ctype__Bool = _Ctype_bool /*line :35:25*/(full); _cgo1 := /*line :35:33*/win; _cgoCheckPointer(_cgo1, nil); /*line :35:37*/_Cfunc_setFullScreen(_cgo0, _cgo1); }()
		return
	}
}
